<?php 

/**
 * Implements hook_menu().
 */

function statuscake_push_monitoring_menu() {
  $items['admin/config/services/statuscake'] = array(
    'title' => 'Statuscake module settings',
    'description' => 'Settings page for Statuscake push monitoring',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('statuscake_push_monitoring_form'),
    'access arguments' => array('administer statuscake settings'),
    'type' => MENU_NORMAL_ITEM,
   );

  return $items;
}

/**
 * Page callback: Current posts settings
 *
 */

function statuscake_push_monitoring_form($form, &$form_state) {
  $form['form']['statuscake_push_monitoring_url'] = array(
    '#type' => 'textfield',
    '#title' => t('URL to PUSH to StatusCake Servers'),
    '#default_value' => variable_get('statuscake_push_monitoring_url'),
    '#size' => 70,
    '#maxlength' => 200,
    '#description' => t("The URL from Statuscake settings page"),
    '#required' => TRUE,
  );

  return system_settings_form($form);
}

function statuscake_push_monitoring_microtime_float(){
			     list($usec, $sec) = explode(" ", microtime());
			     return ((float)$usec + (float)$sec);
			 }
 
/**
 * Implements hook_cron_queue_info_alter().
*/
/*
function statuscake_push_monitoring_cron_queue_info_alter(&$queues){
		$time_start = statuscake_push_monitoring_microtime_float();
		array_unshift($queues, $time_start); 	
		$statuscakeurl = variable_get('statuscake_push_monitoring_url');
    drupal_http_request($statuscakeurl);
		$time_end = statuscake_push_monitoring_microtime_float();
		array_push($queues, $time_end);
		$time = $time_end - $time_start;
		drupal_set_message(print_r($time, TRUE)); 
}
*/

function statuscake_push_monitoring_cron_queue_info() {
  $debug = debug_backtrace();
  if (!empty($debug[3]['function']) && $debug['3']['function'] == 'drupal_cron_run') {
    $time_start = statuscake_push_monitoring_microtime_float();
    array_unshift($debug, $time_start);
    $statuscakeurl = variable_get('statuscake_push_monitoring_url');
    $time_end = statuscake_push_monitoring_microtime_float();
    array_push($debug, $time_end);
    $time = ($time_end - $time_start) * 1000;
    $statuscakeurl_with_time = substr($statuscakeurl,0,-1) . $time;
    //drupal_set_message(print_r($statuscakeurl_with_time, TRUE)); 
    drupal_http_request($statuscakeurl_with_time);
  }
//drupal_set_message(print_r($debug, TRUE)); 
}



