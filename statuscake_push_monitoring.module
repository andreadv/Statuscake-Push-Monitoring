<?php 

/**
 * Implements hook_menu().
 */
function statuscake_push_monitoring_menu() {
  $items['admin/config/services/statuscake'] = array(
    'title' => 'Statuscake',
    'description' => 'Settings for Statuscake',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('statuscake_push_monitoring_form'),
    'access arguments' => array('administer statuscake settings'),
    'type' => MENU_NORMAL_ITEM,
   );

  return $items;
}

/**
 * Returns the form.
 */
function statuscake_push_monitoring_form(){
  return drupal_get_form('statuscake_push_monitoring_settingspage_form');
}

/**
 * Page callback: Settings page.
 */
function statuscake_push_monitoring_settingspage_form($form_state) {
  $form['statuscake_push_monitoring_url'] = array(
    '#type' => 'textfield',
    '#title' => t('URL to PUSH to StatusCake Servers'),
    '#default_value' => variable_get('statuscake_push_monitoring_url'),
    '#size' => 70,
    '#maxlength' => 200,
    '#description' => t("The URL from statuscake.com settings page"),
    '#required' => TRUE,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
  );
  return $form;
}

/**
 * Implements validation handler.
 *
 * Validating the URL on module settings page
 */
function statuscake_push_monitoring_settingspage_form_validate($form, &$form_state){
  $url = $form_state['input']['statuscake_push_monitoring_url'];
    //drupal_set_message(print_r($form_state, TRUE));
  if (!filter_var($url, FILTER_VALIDATE_URL) === false) {
    drupal_set_message(t("@url is a valid URL", array('@url' => $url)));
    statuscake_push_monitoring_settingspage_submit($form_state);
  }
  else {
    drupal_set_message(t("@url is not a valid URL", array('@url' => $url)), 'error');
    drupal_set_message(t("The form hasn't been submitted."), 'error');
    return FALSE;
  }
}

/**
 * Add a submit handler/function to the form.
 */
function statuscake_push_monitoring_settingspage_submit(&$form_state) { 
  $url = $form_state['input']['statuscake_push_monitoring_url'];
  variable_set('statuscake_push_monitoring_url', $url);
  drupal_set_message(t('The form has been submitted.'));
}

/**
 * Converting time in microtime format.
 */
function statuscake_push_monitoring_microtime_float(){
  list($usec, $sec) = explode(" ", microtime());
  return ((float)$usec + (float)$sec);
}
 
/**
 * Implements hook_cron_queue_info().
 */
function statuscake_push_monitoring_cron_queue_info() {
  $debug = debug_backtrace();
  if (!empty($debug[3]['function']) && $debug['3']['function'] == 'drupal_cron_run') {
    //Getting start time in microseconds
    $time_start = statuscake_push_monitoring_microtime_float();
    array_unshift($debug, $time_start);

    //Getting end time in microseconds
    $time_end = statuscake_push_monitoring_microtime_float();
    array_push($debug, $time_end);

    //Getting time elapsed from start to end in milliseconds
    $time = ($time_end - $time_start) * 1000;

    //Inserting time variable in URL
    $statuscakeurl = variable_get('statuscake_push_monitoring_url');
    $statuscakeurl_with_time = substr($statuscakeurl, 0, -1) . $time;

    //Visit URL
    drupal_http_request($statuscakeurl_with_time);
  }
}

/**
 * Implements hook_permission().
 */
function statuscake_push_monitoring_permission() {
  return array(
    'Statuscake' => array(
      'title' => t('Administer URL settings'),
    ),
  );
}
